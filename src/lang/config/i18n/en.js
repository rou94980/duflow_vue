export const locale = {
  common: {
    comfirm: "OK",
    cancel: "Cancel",
    add: "Add",
    edit2: "Modify",
    save: "Save",
    all: "All",
    edit: "Edit",
    view: "View",
    search: "Search",
    edit_success: "Edit Success",
  },
  flow: {
    flow: "Flow",
    flowName: "Flow Name",
    id: "ID",
    name: "Name",
    companyName: "Company",
    updateTime: "Last Updated",
    status: "Status",
    status_unknown: "Unknown",
    status_active: "Active",
    status_unactive: "Inactive",
    status_close: "Closed",
    status_draft: "Draft",
  },
  node: {
    node: "Node",
    type: "Type",
    id: "ID",
    type_unknown: "Unknown",
    type_start: "Start",
    type_end: "End",
    type_approval: "Approval",
    type_notify: "Notify",
    type_handle: "Process",
    targetType_assignNow: "Assign Immediately",
    targetType_assignLater: "Assign After Submission",
    targetType_unset: "Select Target",
    targetType_manager: "Filler's Manager",
    targetType_gm: "CEO",
    targetType_dept: "Department Head",
    targetType_emp: "Specific Employee",
    targetType_unknownDept: "Unknown Department",
    targetType_unknownEmp: "Unknown Employee",
    approval_pass: "Approved",
    approval_fail: "Rejected",
    notify_list: "Notify Personnel List",
  },
  flowAction: {
    flowAdd_success: "Flow created.",
    flowAdd_fail: "Failed to create flow.",
    flowAdd_cancel: "Flow creation canceled.",
    flowEnable_success: "Flow enabled.",
    flowEnable_fail: "Failed to enable flow.",
    flowDisable_success: "Flow closed.",
    flowDisable_fail: "Failed to close flow.",
    invalidFlow: "Invalid flow.",
    checkFlowSetting: "Check flow settings.",
    checkNodeSetting: "Check node settings.",
    error_startLost: "The flow is missing a 'Start' node.",
    error_endLost: "The flow is missing an 'End' node.",
    error_oneConnect: "Only one connection allowed.",
    error_flowName: "Flow name cannot be empty or invalid!",
    error: "Something went wrong.",
    error_init: " initializing flow failed.",
    error_unknown: "An error occurred. Try again later.",
    error_403: "This flow is not a draft and cannot be edited.",
    error_423: "Another user is editing this flow. Try again later.",
    error_empOrDept: "Select a department or employee.",
    error_notifyTargetRepeat: "Duplicate notification target.",
  },
  login: {
    login: "Login",
    logout: "Logout",
    account: "Account",
    password: "Password",
    sessionTimeOut: "Session Expired",
    sessionAlert: "Please log in again.",
    login_error: "Account or password is wrong.",
  },
  createFlow: {
    editFlow: "Edit Flow",
    enableFlow: "Enable Flow",
    addNewFlow: "New Flow",
    addBySampleFlow: "Create from Template",
    placeholder_companyName: "Select a company",
    placeholder_flowName: "Enter flow name",
    btn_sampleFlow: "Choose a Template",
    placeholder_sampleFlow: "Select a template",
    option_noSampleFlow: "No template",
    lastSaveTime: "Last Saved",
    placeholder_dept: "Select a department",
    placeholder_emp: "Select an employee",
  },
  flowList: {
    flowList: "Flows",
    operate: "Actions",
    addNewFlow: "Create Flow",
    placeholder_companyName: "Select a company",
    checkFlow: "View Flow",
  },
  flowInfoBar: {
    flowInfo: "Flow Info",
    nodeInfo: "Node Info",
    target: "Target",
    description: "Form Content",
    tooltip_description:
      "The form filler needs to enter the required information in the form.",
    placeholder_description:
      "Please specify each item. The form filler needs to enter the required information in the form.\n\n<Example>\nReimbursement Invoice Number: ___________\nReimbursement Amount: ___________",
    description_alert: "Form content description cannot be empty",
  },
  contralSetting: {
    langChange: "Language",
  },
};
